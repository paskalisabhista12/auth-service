events {}

error_log /dev/stdout info;

http {
    resolver 127.0.0.11 ipv6=off;

    upstream auth_service {
        server auth-service:8080;   # in Docker Compose, use service name
    }

    server {
        listen 8000;
        
        location ^~ /auth-service/ {
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        location ~ ^/(?<service>[^/]+)/(?<path>.*)$ {
            access_by_lua_block {
                local cjson = require "cjson"
                local http = require "resty.http"

                local service = ngx.var.service
                local path = ngx.var.path
                local method = ngx.req.get_method()

                ngx.log(ngx.INFO, "Incoming request: service=", service, " path=", path, " method=", method)

                -- Build JSON payload
                local body = cjson.encode({
                    service = service,
                    endpoint = path,
                    method = method
                })

                ngx.log(ngx.DEBUG, "Introspect payload: ", body)

                local httpc = http.new()
                local headers = ngx.req.get_headers()
                local auth_header = headers["Authorization"]

                local res, err = httpc:request_uri("http://auth-service:8080/api/auth/introspect", {
                    method = "POST",
                    body = body,
                    headers = {
                        ["Content-Type"] = "application/json",
                        ["Authorization"] = auth_header,  -- ðŸ”‘ Forward bearer token
                    }
                })


                if not res then
                    ngx.log(ngx.ERR, "Auth service request failed: ", err)
                    ngx.status = 502
                    ngx.say(cjson.encode({ error = "Auth service unavailable", detail = err }))
                    return ngx.exit(502)
                end

                -- if introspection failed (not 200 OK)
                if res.status ~= 200 then
                    ngx.log(ngx.WARN, "Auth rejected: status=", res.status, " body=", res.body)
                    ngx.status = res.status
                    ngx.header.content_type = "application/json"
                    ngx.say(res.body)  -- return whatever auth-service says
                    return ngx.exit(res.status)
                end

                ngx.log(ngx.INFO, "Auth service response: status=", res.status, " body=", res.body)
            }


            # Forward request to the target service
            proxy_pass http://$service:8080/$path$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
